{"version":3,"sources":["webpack://Highlighter/webpack/universalModuleDefinition","webpack://Highlighter/webpack/bootstrap","webpack://Highlighter/./src/converts/hanzi2num.ts","webpack://Highlighter/./src/highlight.js","webpack://Highlighter/./src/keywords.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;;AClFA,IAAY,eAYX;AAZD,WAAY,eAAe;IACzB,qDAAI;IACJ,uDAAK;IACL,2DAAO;IACP,6DAAQ;IACR,+DAAS;IACT,uDAAK;IACL,qDAAI;IAEJ,gBAAgB;IAChB,uDAAK;IACL,mDAAG,EAAC,QAAQ;AACd,CAAC,EAZW,eAAe,GAAf,uBAAe,KAAf,uBAAe,QAY1B;AA6BD,IAAM,UAAU,GAAG;QACjB,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE;QAC3C,GAAG,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,EAAE;QAC9C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,KAAK,EAAE;QAClC,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,KAAK,EAAE;QAClC,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE;QAC7C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE;QAC9C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE;QAC9C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE;QAC9C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE;QAC9C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE;QAC9C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE;QAC9C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE;QAC9C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE;QAC9C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE;QAC9C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,EAAE;QAC7C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,EAAE;QAC7C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,EAAE;QAC7C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,EAAE;QAC7C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,EAAE;QAC7C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,QAAQ,EAAE,GAAG,EAAE,EAAE,EAAE;QAC9C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,QAAQ,EAAE,GAAG,EAAE,EAAE,EAAE;QAC9C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,QAAQ,EAAE,GAAG,EAAE,EAAE,EAAE;QAC9C,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,QAAQ,EAAE,GAAG,EAAE,EAAE,EAAE;QAC9C,CAAC,EAAE,EAAE,IAAI,E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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,yBAAyB,cAAc;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,cAAc;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,eAAe;AAClC,+BAA+B,sBAAsB,IAAI,MAAM;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,yBAAyB,UAAU;AACnC;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpMa,uBAAe,GAAG,KAAK,CAAC,IAAI,CACvC,2CAA2C,CAC5C,CAAC;AAEW,uBAAe,GAGxB;IACF,EAAE,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAC;IACtB,EAAE,EAAE,CAAC,MAA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","file":"dist/highlight.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Highlighter\"] = factory();\n\telse\n\t\troot[\"Highlighter\"] = factory();\n})((typeof self !== \"undefined\" ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/highlight.js\");\n","export enum NumberTokenType {\n  SIGN, // 負\n  DIGIT, // 一二三...\n  DECIMAL, // ·\n  INT_MULT, // 十百千萬億...\n  FRAC_MULT, // 分釐毫...\n  DELIM, // 又\n  ZERO, // 零\n\n  // pseudo tokens\n  BEGIN, // <BEGIN>\n  END // <END>\n}\nexport type Digit = \"0\" | \"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\" | \"8\" | \"9\";\n\nexport type NumberToken =\n  | {\n      type: NumberTokenType.ZERO | NumberTokenType.DIGIT;\n      digit: Digit;\n    }\n  | {\n      type: NumberTokenType.SIGN;\n      sign: number;\n    }\n  | {\n      type:\n        | NumberTokenType.DECIMAL\n        | NumberTokenType.INT_MULT\n        | NumberTokenType.FRAC_MULT;\n      exp: number;\n    }\n  | {\n      type: NumberTokenType.DELIM | NumberTokenType.BEGIN | NumberTokenType.END;\n    };\n\nexport interface ParseResult {\n  sign: number;\n  exp: number;\n  digits: Digit[];\n}\n\nconst NUM_TOKENS = {\n  負: { type: NumberTokenType.SIGN, sign: -1 },\n  \"·\": { type: NumberTokenType.DECIMAL, exp: 0 }, // U+00B7 Middle Dot\n  又: { type: NumberTokenType.DELIM },\n  有: { type: NumberTokenType.DELIM },\n  零: { type: NumberTokenType.ZERO, digit: \"0\" },\n  一: { type: NumberTokenType.DIGIT, digit: \"1\" },\n  二: { type: NumberTokenType.DIGIT, digit: \"2\" },\n  三: { type: NumberTokenType.DIGIT, digit: \"3\" },\n  四: { type: NumberTokenType.DIGIT, digit: \"4\" },\n  五: { type: NumberTokenType.DIGIT, digit: \"5\" },\n  六: { type: NumberTokenType.DIGIT, digit: \"6\" },\n  七: { type: NumberTokenType.DIGIT, digit: \"7\" },\n  八: { type: NumberTokenType.DIGIT, digit: \"8\" },\n  九: { type: NumberTokenType.DIGIT, digit: \"9\" },\n  十: { type: NumberTokenType.INT_MULT, exp: 1 },\n  百: { type: NumberTokenType.INT_MULT, exp: 2 },\n  千: { type: NumberTokenType.INT_MULT, exp: 3 },\n  萬: { type: NumberTokenType.INT_MULT, exp: 4 },\n  億: { type: NumberTokenType.INT_MULT, exp: 8 },\n  兆: { type: NumberTokenType.INT_MULT, exp: 12 },\n  京: { type: NumberTokenType.INT_MULT, exp: 16 },\n  垓: { type: NumberTokenType.INT_MULT, exp: 20 },\n  秭: { type: NumberTokenType.INT_MULT, exp: 24 },\n  穰: { type: NumberTokenType.INT_MULT, exp: 28 },\n  溝: { type: NumberTokenType.INT_MULT, exp: 32 },\n  澗: { type: NumberTokenType.INT_MULT, exp: 36 },\n  正: { type: NumberTokenType.INT_MULT, exp: 40 },\n  載: { type: NumberTokenType.INT_MULT, exp: 44 },\n  極: { type: NumberTokenType.INT_MULT, exp: 48 },\n  分: { type: NumberTokenType.FRAC_MULT, exp: -1 },\n  釐: { type: NumberTokenType.FRAC_MULT, exp: -2 },\n  毫: { type: NumberTokenType.FRAC_MULT, exp: -3 },\n  絲: { type: NumberTokenType.FRAC_MULT, exp: -4 },\n  忽: { type: NumberTokenType.FRAC_MULT, exp: -5 },\n  微: { type: NumberTokenType.FRAC_MULT, exp: -6 },\n  纖: { type: NumberTokenType.FRAC_MULT, exp: -7 },\n  沙: { type: NumberTokenType.FRAC_MULT, exp: -8 },\n  塵: { type: NumberTokenType.FRAC_MULT, exp: -9 },\n  埃: { type: NumberTokenType.FRAC_MULT, exp: -10 },\n  渺: { type: NumberTokenType.FRAC_MULT, exp: -11 },\n  漠: { type: NumberTokenType.FRAC_MULT, exp: -12 },\n  // eslint-disable-next-line no-useless-computed-key\n  [\"〇\"]: { type: NumberTokenType.DIGIT, digit: \"0\" } // U+3007 Ideographic Number Zero\n} as Record<string, NumberToken>;\n\nconst NEG_WORD = \"負\";\nconst INF_WORD = \"無限大數\";\nconst NAN_WORD = \"不可算數\";\n\nconst DECIMAL_WORD = {\n  readout: \"又\"\n};\n\nconst DIGIT_WORDS = {\n  readout: {\n    0: \"零\",\n    1: \"一\",\n    2: \"二\",\n    3: \"三\",\n    4: \"四\",\n    5: \"五\",\n    6: \"六\",\n    7: \"七\",\n    8: \"八\",\n    9: \"九\"\n  }\n};\n\nconst MULT_WORDS = {\n  readout: [\n    { str: \"極\", exp: 48 },\n    { str: \"載\", exp: 44 },\n    { str: \"正\", exp: 40 },\n    { str: \"澗\", exp: 36 },\n    { str: \"溝\", exp: 32 },\n    { str: \"穰\", exp: 28 },\n    { str: \"秭\", exp: 24 },\n    { str: \"垓\", exp: 20 },\n    { str: \"京\", exp: 16 },\n    { str: \"兆\", exp: 12 },\n    { str: \"億\", exp: 8 },\n    { str: \"萬\", exp: 4 },\n    { str: \"千\", exp: 3 },\n    { str: \"百\", exp: 2 },\n    { str: \"十\", exp: 1 },\n    { str: \"\", exp: 0 },\n    { str: \"分\", exp: -1 },\n    { str: \"釐\", exp: -2 },\n    { str: \"毫\", exp: -3 },\n    { str: \"絲\", exp: -4 },\n    { str: \"忽\", exp: -5 },\n    { str: \"微\", exp: -6 },\n    { str: \"纖\", exp: -7 },\n    { str: \"沙\", exp: -8 },\n    { str: \"塵\", exp: -9 },\n    { str: \"埃\", exp: -10 },\n    { str: \"渺\", exp: -11 },\n    { str: \"漠\", exp: -12 }\n  ]\n};\n\nconst eMultState = {\n  NONE: \"NONE\", // <END>, 一 (ambiguous: 一萬一 or 一十一 or 一·一 or 一絲一)\n  FRAC: \"FRAC\", // ...微\n  INT: \"INT\", // ...萬, ...·,\n  DONE: \"DONE\", // 負一,\n  SIGN: \"SIGN\"\n};\n\nconst eDigitState = {\n  NONE: \"NONE\", // <END>, ·\n  MULT: \"MULT\", // 微\n  MULT_AMBIG: \"MULT_AMBIG\", // 十 (ambiguous: ...十 or 一十)\n  DIGIT: \"DIGIT\", // 一\n  DIGIT_WITH_ZERO: \"DIGIT_WITH_ZERO\", // 一...零, 零零， 零一...零,\n  DELIM: \"DELIM\", // 又\n  ZERO: \"ZERO\", // 零<END>, 零·, 零又, 零微, 零一\n  SIGN: \"SIGN\", // 負\n  ZERO_MULT_AMBIG: \"ZERO_MULT_AMBIG\" // 零十 (ambiguous: 零一十 or 零十 or 〇十)\n};\n\nconst RESULT_2_TO_63 = {\n  sign: 1,\n  exp: 0,\n  digits: \"9223372036854775808\".split(\"\").reverse() as Digit[]\n};\n\nexport function hanzi2numstr(s: string): string | null {\n  // returns array of tokens on success, null on invalid string\n  function tokenize(s: string) {\n    const result: NumberToken[] = [{ type: NumberTokenType.BEGIN }];\n    for (let i = 0; i < s.length; ++i) {\n      const tokenStr = s.charAt(i);\n      if (!NUM_TOKENS[tokenStr]) {\n        return null;\n      }\n\n      result.push(NUM_TOKENS[tokenStr]);\n    }\n    result.push({ type: NumberTokenType.END });\n    return result;\n  }\n\n  // returns:\n  //   on success: {\n  //     sign:   +1/-1/+Infinity/-Infinity/NaN,\n  //     exp:    power of 10,\n  //     digits: array of digit chars from lowest to highest, with leading and trailing zeros\n  //   }\n  //   on invalid string: null\n  // result = sign * {digits[length-1..0]} * 10^exp\n  // e.g. 負零又五毫零絲 = { sign: -1, exp: -4, digits: [\"0\", \"5\", \"0\", \"0, \"0\"] } = -00050e-4 = -0.005\n  function parse(tokens: NumberToken[]): ParseResult | null {\n    // parses the number string backwards, from lowest to highest digit\n    // parser state\n    let digitState = eDigitState.NONE;\n\n    // multiplier stack, keep track of all active multiplier exponents\n    const multStack = {\n      isEmpty() {\n        return this._exps.length === 0;\n      },\n      total() {\n        return this._expAdd;\n      },\n      top() {\n        return this._exps[this._exps.length - 1];\n      },\n      state() {\n        if (this.isEmpty()) {\n          return eMultState.NONE;\n        } else if (this._exps[0] < 0) {\n          return eMultState.FRAC;\n        } else if (this._exps[0] < Infinity) {\n          return eMultState.INT;\n        } else {\n          return eMultState.DONE;\n        }\n      },\n\n      push(exp: number) {\n        this._expAdd += exp;\n        this._exps.push(exp);\n      },\n      pop() {\n        this._expAdd -= this.top();\n        this._exps.pop();\n      },\n      clear() {\n        this._expAdd = 0;\n        this._exps = [];\n      },\n      markDone() {\n        this.clear();\n        this.push(Infinity);\n      },\n\n      _exps: [] as number[],\n      _expAdd: 0\n    };\n\n    // result, with different convension of exp for internal use\n    const result = {\n      sign() {\n        return this._sign;\n      },\n      exp() {\n        return this._exp;\n      },\n      digits() {\n        return this._digits;\n      },\n\n      applySign(newSign: number) {\n        this._sign *= newSign;\n      },\n      // digit: number or array of numbers\n      push(digit: Digit[] | Digit) {\n        if (Array.isArray(digit)) {\n          this._digits = this._digits.concat(digit);\n          this._exp += digit.length;\n        } else {\n          this._digits.push(digit);\n          ++this._exp;\n        }\n      },\n      fillZeros(newExp: number) {\n        this.push(Array(newExp - this._exp).fill(\"0\"));\n      },\n      resetExp(newExp: number) {\n        this._exp = newExp;\n      },\n\n      // the result is sign * 0.{digits[length-1..0]} * 10^exp\n      _sign: 1, // +1/-1\n      _exp: 0, // one plus exponent of the highest digit\n      _digits: [] as Digit[] // lowest to highest\n    };\n\n    // parses the number string backwards, discarding <END>\n    for (let i = tokens.length - 1; i > 0; --i) {\n      const token = tokens[i - 1];\n\n      // sign should be the first char\n      if (\n        multStack.state() === eMultState.SIGN &&\n        token.type !== NumberTokenType.BEGIN\n      ) {\n        return null;\n      }\n\n      // disambiguate omitted 一\n      switch (digitState) {\n        case eDigitState.MULT_AMBIG:\n          switch (token.type) {\n            // <BEGIN>(一?)十 -> <BEGIN>一十\n            // 負(一?)十 -> 負一十\n            // 又(一?)十 -> 又一十\n            // ·(一?)十 -> ·一十\n            // 分(一?)十絲 -> 分一十絲\n            case NumberTokenType.BEGIN:\n            case NumberTokenType.SIGN:\n            case NumberTokenType.DELIM:\n            case NumberTokenType.DECIMAL:\n            case NumberTokenType.FRAC_MULT:\n              result.push(\"1\");\n              digitState = eDigitState.DIGIT;\n              break;\n\n            // 一(一?)十 -> 一十\n            case NumberTokenType.DIGIT:\n              digitState = eDigitState.MULT;\n              break;\n\n            // 百(一?)十 -> 百一十\n            // 千(一?)十 -> 千一十\n            // 百(一?)萬 -> 百萬\n            case NumberTokenType.INT_MULT:\n              if (multStack.top() < (token.exp || 1)) {\n                result.push(\"1\");\n                digitState = eDigitState.DIGIT;\n              } else {\n                digitState = eDigitState.MULT;\n              }\n              break;\n\n            // 零(一?)十 -> 零(一?)十\n            case NumberTokenType.ZERO:\n              digitState = eDigitState.MULT_AMBIG;\n              break;\n\n            default:\n              break;\n          }\n          break;\n\n        case eDigitState.ZERO_MULT_AMBIG:\n          switch (token.type) {\n            // <BEGIN>(零一|零|〇)十 -> <BEGIN>〇十\n            // 負(零一|零|〇)十 -> 負〇十\n            // 一(零一|零|〇)十 -> 一〇十\n            // 又(零一|零|〇)十 -> 又〇十\n            // 零(零一|零|〇)十 -> 〇〇十\n            case NumberTokenType.BEGIN:\n            case NumberTokenType.SIGN:\n            case NumberTokenType.DIGIT:\n            case NumberTokenType.DELIM:\n            case NumberTokenType.ZERO:\n              result.push(\"0\");\n              digitState = eDigitState.DIGIT_WITH_ZERO;\n              break;\n\n            // ·(零一|零|〇)十絲 -> ·零一十絲\n            // ·(零一|零|〇)十釐 -> ·〇十釐\n            // ·(零一|零|〇)十分 -> error\n            // ·(零一|零|〇)百分 -> error\n            // 分(零一|零|〇)十絲 -> 分零一十絲\n            // 分(零一|零|〇)十毫 -> 分〇十絲\n            // 分(零一|零|〇)十釐 -> error\n            // 分(零一|零|〇)十分 -> error\n            case NumberTokenType.DECIMAL:\n            case NumberTokenType.FRAC_MULT:\n              if (multStack.total() + 1 < token.exp) {\n                result.push(\"1\");\n                result.push(\"0\");\n                digitState = eDigitState.ZERO;\n              } else if (multStack.total() + 1 === token.exp) {\n                result.push(\"0\");\n                digitState = eDigitState.DIGIT_WITH_ZERO;\n              } else {\n                return null;\n              }\n              break;\n\n            // 千(零一|零|〇)十 -> 千零一十\n            // 百(零一|零|〇)十 -> 百〇十\n            // 萬(零一|零|〇)萬 -> 萬零萬\n            // 百(零一|零|〇)萬 -> 百零萬\n            case NumberTokenType.INT_MULT:\n              if (token.exp == null) {\n                return null;\n              }\n\n              if (multStack.top() + 1 < token.exp) {\n                result.push(\"1\");\n                result.push(\"0\");\n                digitState = eDigitState.ZERO;\n              } else if (multStack.top() + 1 === token.exp) {\n                result.push(\"0\");\n                digitState = eDigitState.DIGIT_WITH_ZERO;\n              } else {\n                result.push(\"0\");\n                digitState = eDigitState.ZERO;\n              }\n              break;\n\n            default:\n              break;\n          }\n          break;\n\n        default:\n          break;\n      }\n\n      // determine the exponent of tail digits\n      if (multStack.state() === eMultState.NONE) {\n        switch (token.type) {\n          case NumberTokenType.INT_MULT:\n            // exponent is correct\n            break;\n\n          case NumberTokenType.DECIMAL:\n          case NumberTokenType.FRAC_MULT:\n            if (token.exp != null) {\n              result.resetExp(token.exp);\n            }\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      // determine the current exponent and update exponent stack\n      const currExp = (function() {\n        switch (token.type) {\n          case NumberTokenType.BEGIN:\n          case NumberTokenType.SIGN:\n            switch (digitState) {\n              // <BEGIN>微 -> error\n              // 負微 -> error\n              case eDigitState.MULT:\n                return null;\n\n              default:\n                multStack.markDone();\n                return multStack.total();\n            }\n\n          case NumberTokenType.DIGIT:\n          case NumberTokenType.ZERO:\n            switch (digitState) {\n              // 一又 -> 一·\n              // 零又 -> 零·\n              case eDigitState.DELIM:\n                multStack.clear();\n                multStack.push(0);\n                return multStack.total();\n\n              default:\n                return result.exp();\n            }\n\n          case NumberTokenType.DELIM:\n            switch (digitState) {\n              // 又又 -> error\n              case eDigitState.DELIM:\n                return null;\n\n              default:\n                return result.exp();\n            }\n\n          // ·...絲 -> ·\n          // 釐...絲 -> 釐\n          // ·絲 -> error\n          // 釐絲 -> error\n          case NumberTokenType.DECIMAL:\n          case NumberTokenType.FRAC_MULT:\n            if (digitState === eDigitState.MULT) {\n              return null;\n            } else {\n              multStack.clear();\n              multStack.push(token.exp);\n              return multStack.total();\n            }\n\n          case NumberTokenType.INT_MULT:\n            switch (digitState) {\n              // 百又...絲 -> 百\n              // 萬又...百萬億 -> 萬萬億\n              case eDigitState.DELIM:\n                if (multStack.state() === eMultState.FRAC) {\n                  multStack.clear();\n                  multStack.push(token.exp);\n                } else {\n                  while (!multStack.isEmpty() && multStack.top() < token.exp) {\n                    multStack.pop();\n                  }\n\n                  multStack.push(token.exp);\n                }\n                break;\n\n              // 萬...百萬億 -> 萬萬億\n              // 萬零...百萬億 -> 萬萬億\n              // 百...十絲 -> 百絲\n              // 千零...十絲 -> 千絲\n              case eDigitState.NONE:\n              case eDigitState.MULT:\n              case eDigitState.MULT_AMBIG:\n              case eDigitState.DIGIT:\n              case eDigitState.DIGIT_WITH_ZERO:\n              case eDigitState.ZERO:\n              case eDigitState.ZERO_MULT_AMBIG:\n                while (\n                  !multStack.isEmpty() &&\n                  multStack.top() < token.exp &&\n                  multStack.top() >= 0\n                ) {\n                  multStack.pop();\n                }\n\n                multStack.push(token.exp);\n                break;\n            }\n            return multStack.total();\n        }\n      })();\n      if (currExp == null) {\n        return null;\n      }\n\n      // check for overlapping decimal places\n      if (currExp < result.exp()) {\n        return null;\n      }\n\n      // check for disallowed missing decimal places\n      if (currExp > result.exp()) {\n        const check = function() {\n          if (\n            token.type === NumberTokenType.BEGIN ||\n            token.type === NumberTokenType.SIGN\n          ) {\n            return true;\n          }\n\n          if (\n            digitState === eDigitState.DELIM ||\n            digitState === eDigitState.ZERO\n          ) {\n            return true;\n          }\n\n          if (token.type === NumberTokenType.INT_MULT) {\n            return true;\n          }\n\n          if (\n            token.type === NumberTokenType.FRAC_MULT ||\n            token.type === NumberTokenType.DECIMAL\n          ) {\n            return true;\n          }\n\n          return false;\n        };\n\n        if (!check()) {\n          return null;\n        }\n\n        if (multStack.state() !== eMultState.DONE) {\n          result.fillZeros(currExp);\n        }\n      }\n\n      // push the digit, update parser state\n      switch (token.type) {\n        case NumberTokenType.BEGIN:\n          break;\n\n        case NumberTokenType.SIGN:\n          result.applySign(token.sign);\n          digitState = eDigitState.SIGN;\n          break;\n\n        case NumberTokenType.DIGIT:\n          result.push(token.digit);\n          if (\n            digitState === eDigitState.ZERO ||\n            digitState === eDigitState.DIGIT_WITH_ZERO\n          ) {\n            digitState = eDigitState.DIGIT_WITH_ZERO;\n          } else {\n            digitState = eDigitState.DIGIT;\n          }\n\n          break;\n\n        case NumberTokenType.DECIMAL:\n          digitState = eDigitState.NONE;\n          break;\n\n        case NumberTokenType.INT_MULT:\n          digitState = eDigitState.MULT_AMBIG;\n          break;\n\n        case NumberTokenType.FRAC_MULT:\n          digitState = eDigitState.MULT;\n          break;\n\n        case NumberTokenType.DELIM:\n          digitState = eDigitState.DELIM;\n          break;\n\n        case NumberTokenType.ZERO:\n          switch (digitState) {\n            case eDigitState.NONE:\n            case eDigitState.MULT:\n            case eDigitState.DIGIT:\n            case eDigitState.DELIM:\n              result.push(token.digit);\n              digitState = eDigitState.ZERO;\n              break;\n\n            case eDigitState.DIGIT_WITH_ZERO:\n            case eDigitState.ZERO:\n              result.push(token.digit);\n              digitState = eDigitState.ZERO;\n              break;\n\n            case eDigitState.MULT_AMBIG:\n              digitState = eDigitState.ZERO_MULT_AMBIG;\n              break;\n          }\n          break;\n      }\n    }\n\n    if (result.digits().length === 0) {\n      return null;\n    }\n\n    return {\n      sign: result.sign(),\n      exp: result.exp() - result.digits().length,\n      digits: result.digits()\n    };\n  }\n\n  function getDigit(result: any, exp: number) {\n    const idx = exp - result.exp;\n    if (idx >= 0 && idx < result.digits.length) {\n      return result.digits[idx];\n    } else {\n      return \"0\";\n    }\n  }\n\n  function compareMagnitude(resultA: ParseResult, resultB: ParseResult) {\n    const getMaxExp = (result: ParseResult) =>\n      result.exp + (result.digits.length - 1);\n\n    const maxExp = Math.max(getMaxExp(resultA), getMaxExp(resultB));\n    for (let i = maxExp; i >= resultA.exp || i >= resultB.exp; --i) {\n      const digitA = Number(getDigit(resultA, i));\n      const digitB = Number(getDigit(resultB, i));\n      if (digitA > digitB) {\n        return 1;\n      } else if (digitA < digitB) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  // parse\n  const tokens = tokenize(s);\n  if (tokens == null) {\n    return null;\n  }\n\n  const result = parse(tokens);\n  if (result == null) {\n    return null;\n  }\n\n  // build decimal string\n  if (!Number.isFinite(result.sign)) {\n    // infinity/NaN\n    return result.sign.toString();\n  }\n  let str = result.sign < 0 ? \"-\" : \"\";\n\n  // no fractional digits (including zero) and fits in int64?\n  const printAsInt = (function() {\n    if (result.exp < 0) {\n      return false;\n    }\n\n    const c = compareMagnitude(result, RESULT_2_TO_63);\n    return result.sign < 0 ? c <= 0 : c < 0;\n  })();\n\n  // digit range, leading and trailing zeros trimmed\n  const rend = result.digits.findIndex(x => x !== \"0\");\n  if (rend < 0) {\n    str += \"0\";\n    return str;\n  }\n  const rendExp = result.exp + rend;\n\n  let rbegin = result.digits.length;\n  while (result.digits[rbegin - 1] === \"0\") {\n    --rbegin;\n  }\n\n  const rbeginExp = result.exp + rbegin;\n\n  // compute length of fixed and scientific format\n  let expStr = \"\";\n  let printAsScientific = false;\n  if (!printAsInt) {\n    const scientificExp = result.exp + (rbegin - 1);\n    expStr =\n      (scientificExp < 0 ? \"e-\" : \"e+\") + Math.abs(scientificExp).toString();\n    const fixedLen =\n      rendExp < 0 ? Math.max(rbeginExp, 1) - rendExp + 1 : rbeginExp;\n    const scientificMagLen = rbegin - rend > 1 ? rbegin - rend + 1 : 1;\n    if (scientificMagLen + expStr.length < fixedLen) {\n      printAsScientific = true;\n    }\n  }\n\n  if (printAsScientific) {\n    str += result.digits[rbegin - 1];\n    if (rbegin - 1 > rend) {\n      str += \".\";\n      for (let i = rbegin - 1; i > rend; --i) {\n        str += result.digits[i - 1];\n      }\n    }\n    str += expStr;\n    return str;\n  } else {\n    for (let i = Math.max(rbeginExp, 1); i > 0; --i) {\n      str += getDigit(result, i - 1);\n    }\n\n    if (rendExp < 0) {\n      str += \".\";\n      for (let i = 0; i > rendExp; --i) {\n        str += getDigit(result, i - 1);\n      }\n    }\n    return str;\n  }\n}\n\nexport function hanzi2num(s: string): number {\n  const str = hanzi2numstr(s);\n  if (str == null) {\n    return NaN;\n  } else {\n    return Number(str);\n  }\n}\n\nexport function num2hanzi(\n  n: number,\n  format = \"\",\n  precision = undefined\n): string {\n  if (!Number.isFinite(n)) {\n    if (n === Infinity) {\n      return INF_WORD;\n    } else if (n === -Infinity) {\n      return NEG_WORD + INF_WORD;\n    } else {\n      return NAN_WORD;\n    }\n  }\n\n  // the same format as hanzi2numstr.parse\n  function parseNumStr(str: string): ParseResult {\n    function myIndexOf(str: string, val: string) {\n      const idx = str.indexOf(val);\n      return idx < 0 ? str.length : idx;\n    }\n    const sign = str.charAt(0) === \"-\" ? -1 : 1;\n    const digitIndex = \"+-\".includes(str.charAt(0)) ? 1 : 0;\n    const expIndex = myIndexOf(str, \"e\");\n    const scientificExp =\n      expIndex === str.length ? 0 : Number(str.substring(expIndex + 1));\n    const decimalIndex = myIndexOf(str.substring(0, expIndex), \".\");\n    const intStr = str.substring(digitIndex, decimalIndex);\n    const intDigits = intStr.split(\"\").reverse() as Digit[];\n    const fracStr = str.substring(\n      Math.min(decimalIndex + 1, expIndex),\n      expIndex\n    );\n    const fracDigits = fracStr.split(\"\").reverse() as Digit[];\n    return {\n      sign,\n      exp: scientificExp - fracDigits.length,\n      digits: fracDigits.concat(intDigits)\n    };\n  }\n\n  // reserved for future extension\n  const chineseFormat = \"readout\";\n  const multWords = MULT_WORDS[chineseFormat];\n  const digitWords = DIGIT_WORDS[chineseFormat];\n  const decimalWord = DECIMAL_WORD[chineseFormat];\n\n  let numStr = precision === undefined ? n.toString() : n.toFixed(precision);\n  let result = parseNumStr(numStr);\n  let signStr = result.sign < 0 ? NEG_WORD : \"\";\n  let rend = result.digits.findIndex(x => x !== \"0\");\n  if (rend < 0) {\n    return signStr + digitWords[\"0\"];\n  }\n\n  let rbegin = result.digits.length;\n  while (result.digits[rbegin - 1] === \"0\") {\n    --rbegin;\n  }\n\n  // is this beyond the lowest fractional unit we can represent?\n  const minMultExp = multWords[multWords.length - 1].exp;\n  if (result.exp + rend < minMultExp) {\n    // cap to lowest fractional unit and retry\n    numStr = n.toFixed(-minMultExp);\n    result = parseNumStr(numStr);\n    signStr = result.sign < 0 ? NEG_WORD : \"\";\n    rend = result.digits.findIndex(x => x !== \"0\");\n    if (rend < 0) {\n      return signStr + digitWords[\"0\"];\n    }\n\n    rbegin = result.digits.length;\n    while (result.digits[rbegin - 1] === \"0\") {\n      --rbegin;\n    }\n  }\n\n  // convert digits to readout format\n  let str = signStr;\n  let pendingZero = false;\n  let i = rbegin;\n  const intToReadout = function(expBias = 0) {\n    let hasOutput = false;\n    while (i !== rend) {\n      const mult = multWords.find(x => x.exp + expBias <= result.exp + (i - 1));\n      if (mult === undefined || mult.exp < 0) {\n        // done with int part\n        break;\n      } else if (mult.exp > 0) {\n        // needs higher multiplier\n        if (intToReadout(expBias + mult.exp)) {\n          // 零 is omitted here (100 0000 -> 一百萬)\n          pendingZero = false;\n          // write the multiplier\n          str += mult.str;\n          hasOutput = true;\n        }\n      } else if (mult.exp === 0) {\n        if (result.digits[i - 1] !== \"0\") {\n          // insert 零 if necessary\n          if (pendingZero) {\n            str += digitWords[\"0\"];\n            pendingZero = false;\n          }\n          // write the digit\n          str += digitWords[result.digits[i - 1]];\n          hasOutput = true;\n        } else {\n          // mark that there are zero(s) not written yet\n          // 零 will be added later if necessary\n          pendingZero = true;\n        }\n        --i;\n        break;\n      }\n    }\n    return hasOutput;\n  };\n  const fracToReadout = function() {\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while (i !== rend) {\n      const mult = multWords.find(x => x.exp <= result.exp + (i - 1));\n      if (mult === undefined) {\n        break;\n      }\n\n      if (intToReadout(mult.exp)) {\n        str += mult.str;\n        pendingZero = false;\n      }\n    }\n  };\n\n  const hasInt = intToReadout();\n  pendingZero = false;\n  if (i !== rend) {\n    if (hasInt) {\n      str += decimalWord;\n    }\n\n    // avoid 又零\n    while (i !== rend && result.digits[i - 1] === \"0\") {\n      --i;\n    }\n\n    fracToReadout();\n  }\n  return str;\n}\n\nexport function bool2hanzi(b: boolean): string {\n  return b ? \"陽\" : \"陰\";\n}\n","var { num2hanzi } = require(\"./converts/hanzi2num\");\nvar { NUMBER_KEYWORDS, KEYWORDS } = require(\"./keywords\");\n\nvar DEFAULT_COLORS = {\n  ctrl: \"#F92672\",\n  lop: \"#FFF\",\n  name: \"#FFF\",\n  cmp: \"#FFF\",\n  decl: \"#FFF\",\n  print: \"#FFF\",\n  rassgn: \"#FFF\",\n  ctnr: \"#66D9EF\",\n  comment: \"#FFF\",\n  type: \"#66D9EF\",\n  call: \"#FFF\",\n  assgn: \"#FFF\",\n  discard: \"#FFF\",\n  endl: \"#75715E\",\n  ans: \"#A6E22E\",\n  expr: \"#FFF\",\n  op: \"#FFF\",\n  not: \"#FFF\",\n  operand: \"#FFF\",\n  bool: \"#AE81FF\",\n  data: \"#75715E\",\n  iden: \"#A6E22E\",\n  quot: \"#A6E22E\",\n  num: \"#AE81FF\"\n};\n\nvar setTheme = function(theme) {\n  DEFAULT_COLORS = theme;\n};\n\nvar semantic = function(txt) {\n  var off = 0;\n  var out = [];\n  var i = 0;\n  while (i < txt.length) {\n    if (txt[i] == \"「\" || txt[i] == \"『\") {\n      off++;\n      out.push(\"quot\");\n    } else if (txt[i] == \"」\" || txt[i] == \"』\") {\n      off--;\n      out.push(\"quot\");\n    } else {\n      if (off) {\n        out.push(\"iden\");\n      } else {\n        var ok = false;\n        for (var k in KEYWORDS) {\n          ok = true;\n          for (var j = 0; j < k.length; j++) {\n            if (k[j] != txt[i + j]) {\n              ok = false;\n              break;\n            }\n          }\n          if (ok) {\n            for (var j = 0; j < k.length; j++) {\n              out.push(KEYWORDS[k][0]);\n              i++;\n            }\n            i--;\n            break;\n          }\n        }\n        if (ok == false) {\n          if (NUMBER_KEYWORDS.includes(txt[i])) {\n            out.push(\"num\");\n          } else {\n            out.push(\"data\");\n          }\n        }\n      }\n    }\n    i++;\n  }\n  return out;\n};\n\nvar NNL = 0;\n\nfunction newEditor(txt) {\n  var div = document.createElement(\"pre\");\n  div.contentEditable = \"true\";\n  div.autoComplete = \"off\";\n  div.autoCorrect = \"off\";\n  div.autoCapitalize = \"off\";\n  div.spellCheck = \"off\";\n  div.onkeyup = function() {\n    if (event.keyCode == 13) {\n      NNL += 1;\n    }\n  };\n  div.innerHTML = txt;\n  highlight([div]);\n  // setInterval(()=>highlight([div]),20000);\n  return div;\n}\n\nvar highlight = function(codes) {\n  function getCaretPosition(element, mode) {\n    var caretOffset = 0;\n    var doc = element.ownerDocument || element.document;\n    var win = doc.defaultView || doc.parentWindow;\n    var sel;\n\n    sel = win.getSelection();\n    if (sel.rangeCount > 0) {\n      var range = win.getSelection().getRangeAt(0);\n      var preCaretRange = range.cloneRange();\n      preCaretRange.selectNodeContents(element);\n      if (mode == \"start\") {\n        preCaretRange.setEnd(range.endContainer, range.endOffset);\n      } else {\n        preCaretRange.setEnd(range.startContainer, range.startOffset);\n      }\n      caretOffset = preCaretRange.toString().length;\n    }\n    return caretOffset;\n  }\n\n  function setCaretPosition(element, i, j, ie, je) {\n    var range = document.createRange();\n    var sel = window.getSelection();\n    range.setStart(element.childNodes[i], j);\n    range.setEnd(element.childNodes[ie], je);\n    sel.removeAllRanges();\n    sel.addRange(range);\n  }\n\n  for (var i = 0; i < codes.length; i++) {\n    var c = getCaretPosition(codes[i], \"start\") + NNL;\n    var ce = getCaretPosition(codes[i], \"end\") + NNL;\n    NNL = 0;\n    var cc = codes[i].innerText;\n    var nc = \"\";\n    var sm = semantic(cc);\n\n    for (var j = 0; j < cc.length; j++) {\n      nc += `<x style=\"color:${DEFAULT_COLORS[sm[j]]}\">${cc[j]}</x>`;\n    }\n    // console.log(cc);\n    // console.log(nc);\n    codes[i].innerHTML = nc;\n    if (document.activeElement == codes[i]) {\n      var c0 = Math.min(c, ce);\n      var c1 = Math.max(c, ce);\n      try {\n        setCaretPosition(codes[i], c0, 0, c1, 0);\n        // console.log(c0,0,c1,0)\n      } catch (e) {\n        for (var eee = 0; eee < 10; eee++) {\n          try {\n            codes[i].innerHTML += \"<i></i>\";\n            setCaretPosition(codes[i], c0, 0, c1, 0);\n            break;\n          } catch (e) {}\n        }\n      }\n    }\n  }\n};\n\nfunction newLineNo(ed) {\n  var div = document.createElement(\"pre\");\n  div.style.float = \"left\";\n  div.style.textAlign = \"right\";\n  div.style.color = DEFAULT_COLORS.endl;\n  function isRoman(x) {\n    return x.replace(/[ -~\\t]/g, \"\").length == 0;\n  }\n  function genLineNo() {\n    var ls = ed.innerText.split(\"\\n\");\n    var n = ls.length;\n    div.innerText = \"\";\n    for (var i = 0; i < n; i++) {\n      if (!isRoman(ls[i])) {\n        div.innerText += num2hanzi(i + 1) + \" \";\n      }\n      if (i != n - 1) {\n        div.innerText += \"\\n\";\n      }\n    }\n  }\n  setInterval(genLineNo, 1000);\n  genLineNo();\n  return div;\n}\n\nmodule.exports = {\n  semantic,\n  highlight,\n  newLineNo,\n  DEFAULT_COLORS,\n  newEditor,\n  setTheme\n};\n","import { TokenType } from \"./types\";\n\nexport const NUMBER_KEYWORDS = Array.from(\n  \"負·又零〇一二三四五六七八九十百千萬億兆京垓秭穰溝澗正載極分釐毫絲忽微纖沙塵埃渺漠\"\n);\n\nexport const KEYWORDS_DEFINE: Record<\n  string,\n  [TokenType, string | undefined]\n> = {\n  吾有: [\"decl\", \"uninit\"],\n  今有: [\"decl\", \"public\"],\n  物之: [\"decl\", \"prop\"],\n  有: [\"decl\", \"init\"],\n  數: [\"type\", \"num\"],\n  列: [\"type\", \"arr\"],\n  言: [\"type\", \"str\"],\n  術: [\"type\", \"fun\"],\n  爻: [\"type\", \"bol\"],\n  物: [\"type\", \"obj\"],\n  元: [\"type\", \"any\"],\n  書之: [\"print\", undefined],\n  名之曰: [\"name\", undefined],\n  施: [\"call\", \"r\"],\n  以施: [\"call\", \"l\"],\n  曰: [\"assgn\", undefined],\n  噫: [\"discard\", undefined],\n  取: [\"take\", undefined],\n\n  昔之: [\"rassgn\", \"a\"],\n  今: [\"rassgn\", \"b\"],\n  是矣: [\"rassgn\", \"c\"],\n  不復存矣: [\"rassgn\", \"delete\"],\n  其: [\"ans\", undefined],\n\n  乃得: [\"ctrl\", \"ret\"],\n  乃得矣: [\"ctrl\", \"retprev\"],\n  乃歸空無: [\"ctrl\", \"retvoid\"],\n  是謂: [\"ctrl\", \"bigend\"],\n  之術也: [\"ctrl\", \"funend\"],\n  必先得: [\"ctrl\", \"funarg\"],\n  是術曰: [\"ctrl\", \"funbody\"],\n  乃行是術曰: [\"ctrl\", \"funbody\"],\n  欲行是術: [\"ctrl\", \"funstart\"],\n  也: [\"ctrl\", \"end\"],\n  云云: [\"ctrl\", \"end\"],\n  凡: [\"ctrl\", \"for\"],\n  中之: [\"ctrl\", \"forin\"],\n  恆為是: [\"ctrl\", \"whiletrue\"],\n  為是: [\"ctrl\", \"whilen0\"],\n  遍: [\"ctrl\", \"whilen1\"],\n  乃止: [\"ctrl\", \"break\"],\n  乃止是遍: [\"ctrl\", \"continue\"],\n\n  若非: [\"ctrl\", \"else\"],\n  若: [\"ctrl\", \"if\"],\n  者: [\"ctrl\", \"conj\"],\n  若其然者: [\"ctrl\", \"iftrue\"],\n  若其不然者: [\"ctrl\", \"iffalse\"],\n  或若: [\"ctrl\", \"elseif\"],\n\n  其物如是: [\"ctrl\", \"objbody\"],\n  之物也: [\"ctrl\", \"objend\"],\n\n  夫: [\"expr\", undefined],\n\n  等於: [\"cmp\", \"==\"],\n  不等於: [\"cmp\", \"!=\"],\n  不大於: [\"cmp\", \"<=\"],\n  不小於: [\"cmp\", \">=\"],\n  大於: [\"cmp\", \">\"],\n  小於: [\"cmp\", \"<\"],\n\n  加: [\"op\", \"+\"],\n  減: [\"op\", \"-\"],\n  乘: [\"op\", \"*\"],\n  除: [\"op\", \"/\"],\n  中有陽乎: [\"lop\", \"||\"],\n  中無陰乎: [\"lop\", \"&&\"],\n  變: [\"not\", undefined],\n  所餘幾何: [\"mod\", undefined],\n\n  以: [\"opord\", \"l\"],\n  於: [\"opord\", \"r\"],\n\n  之長: [\"ctnr\", \"len\"],\n  之: [\"ctnr\", \"subs\"],\n  充: [\"ctnr\", \"push\"],\n  銜: [\"ctnr\", \"cat\"],\n  其餘: [\"ctnr\", \"rest\"],\n\n  陰: [\"bool\", \"false\"],\n  陽: [\"bool\", \"true\"],\n\n  吾嘗觀: [\"import\", \"file\"],\n  中: [\"import\", \"in\"],\n  之書: [\"import\", \"fileend\"],\n  方悟: [\"import\", \"iden\"],\n  之義: [\"import\", \"idenend\"],\n\n  嗚呼: [\"throw\", \"a\"],\n  之禍: [\"throw\", \"b\"],\n  姑妄行此: [\"try\", \"try\"],\n  如事不諧: [\"try\", \"catch\"],\n  豈: [\"try\", \"catcherr0\"],\n  之禍歟: [\"try\", \"catcherr1\"],\n  不知何禍歟: [\"try\", \"catchall\"],\n  乃作罷: [\"try\", \"end\"],\n\n  或云: [\"macro\", \"from\"],\n  蓋謂: [\"macro\", \"to\"],\n\n  注曰: [\"comment\", undefined],\n  疏曰: [\"comment\", undefined],\n  批曰: [\"comment\", undefined]\n};\n\nvar ke = Object.entries(KEYWORDS_DEFINE);\nke.sort((a, b) => b[0].length - a[0].length);\nif (!Object.fromEntries) {\n  Object.fromEntries = l => {\n    var o = {};\n    l.map(x => (o[x[0]] = x[1]));\n    return o;\n  };\n}\n\nexport const KEYWORDS = Object.fromEntries(ke);\n"],"sourceRoot":""}